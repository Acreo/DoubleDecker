/*  =========================================================================
    dd_classes - private header file

        Copyright (c) 2015 Pontus Sköldström, Bertrand Pechenot           
                                                                            
        This file is part of libdd, the DoubleDecker hierarchical           
        messaging system DoubleDecker is free software; you can             
        redistribute it and/or modify it under the terms of the GNU Lesser  
        General Public License (LGPL) version 2.1 as published by the Free  
        Software Foundation.                                                
                                                                            
        As a special exception, the Authors give you permission to link this
        library with independent modules to produce an executable,          
        regardless of the license terms of these independent modules, and to
        copy and distribute the resulting executable under terms of your    
        choice, provided that you also meet, for each linked independent    
        module, the terms and conditions of the license of that module. An  
        independent module is a module which is not derived from or based on
        this library.  If you modify this library, you must extend this     
        exception to your version of the library.  DoubleDecker is          
        distributed in the hope that it will be useful, but WITHOUT ANY     
        WARRANTY; without even the implied warranty of MERCHANTABILITY or   
        FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
        License for more details.  You should have received a copy of the   
        GNU Lesser General Public License along with this program.  If not, 
        see http://www.gnu.org/licenses/.                                   
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef DD_CLASSES_H_INCLUDED
#define DD_CLASSES_H_INCLUDED

//  Platform definitions, must come first
#include "platform.h"

//  External API
#include "../include/doubledecker.h"

//  Internal API
#include "dd_protocol.h"
#include "dd_broker_keys.h"
#include "base64.h"
#include "trie.h"

#define RCU_MEMBARRIER
#define XXHSEED 1234
#define MAXTENANTNAME 256

// subscriptions[sockid] = ["b.topicA/0/1/2/", "b.topicB/0/1/2/"]
struct _subscription_node {
    zlist_t *topics;
    zframe_t *sockid;
    struct cds_lfht_node node;
};

// Local nodes
struct _lcl_node {
    char *name; // client name		/* Node content */
    char *prefix_name;
    char *tenant;
    uint64_t cookie;
    zframe_t *sockid;
    int timeout;
    // sockid_node for lcl_cli_ht
    // prename_node and rev_lcl_cli_ht (combine with dist_node?)
    struct cds_lfht_node lcl_node; // Chaining in hash table
    struct cds_lfht_node rev_node; // Chaining in hash table
    // struct cds_lfht_node node;
};

// Distant nodes
struct _dist_node {
    char *name; /* Node content */
    zframe_t *broker;
    int distance;
    struct cds_lfht_node node; /* Chaining in hash table */
};

// Local broker
struct _lcl_broker {
    zframe_t *sockid;
    uint64_t cookie;
    int distance;
    int timeout;
    struct cds_lfht_node node; /* Chaining in hash table */
};
typedef struct _lcl_broker local_broker;
typedef struct _dist_node dist_client;
typedef struct _lcl_node local_client;
typedef struct _subscription_node subscribe_node;

//  *** To avoid double-definitions, only define if building without draft ***
#ifndef DD_BUILD_DRAFT_API

//  *** Draft method, defined for internal use only ***
//  Self test of this class.
DD_EXPORT void
    dd_protocol_test (bool verbose);

//  *** Draft method, defined for internal use only ***
//  Self test of this class.
DD_EXPORT void
    dd_broker_keys_test (bool verbose);

//  *** Draft method, defined for internal use only ***
//  Self test of this class.
DD_EXPORT void
    base64_test (bool verbose);

#endif // DD_BUILD_DRAFT_API

#endif
