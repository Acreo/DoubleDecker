/*  =========================================================================
    subscription - DoubleDecker subscription class

        Copyright (c) 2015 Pontus Sköldström, Bertrand Pechenot           
                                                                            
        This file is part of libdd, the DoubleDecker hierarchical           
        messaging system DoubleDecker is free software; you can             
        redistribute it and/or modify it under the terms of the GNU Lesser  
        General Public License (LGPL) version 2.1 as published by the Free  
        Software Foundation.                                                
                                                                            
        As a special exception, the Authors give you permission to link this
        library with independent modules to produce an executable,          
        regardless of the license terms of these independent modules, and to
        copy and distribute the resulting executable under terms of your    
        choice, provided that you also meet, for each linked independent    
        module, the terms and conditions of the license of that module. An  
        independent module is a module which is not derived from or based on
        this library.  If you modify this library, you must extend this     
        exception to your version of the library.  DoubleDecker is          
        distributed in the hope that it will be useful, but WITHOUT ANY     
        WARRANTY; without even the implied warranty of MERCHANTABILITY or   
        FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
        License for more details.  You should have received a copy of the   
        GNU Lesser General Public License along with this program.  If not, 
        see http://www.gnu.org/licenses/.                                   
    =========================================================================
*/

#ifndef SUBSCRIPTION_H_INCLUDED
#define SUBSCRIPTION_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _subscription_t subscription_t;
#define SUBSCRIPTION_TAG 0x73962654
//  Structure of our class

struct _subscription_t {
  uint32_t tag;
  zframe_t *sockid;
  zlist_t *topics;
  struct cds_lfht_node node;
};

typedef struct json_object json_object_t;

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/subscription.xml" to make changes.
//  @interface
//  This API is a draft, and may change without notice.
#ifdef DD_BUILD_DRAFT_API
//  *** Draft method, for development use, may change without warning ***
//  Create a new per node subscription list
DD_EXPORT subscription_t *
    subscription_new (zframe_t *sockid);

//  *** Draft method, for development use, may change without warning ***
//  Destroy a subscription list
DD_EXPORT void
    subscription_destroy (subscription_t **self_p);

//  *** Draft method, for development use, may change without warning ***
//  Probe the supplied object, and report if it looks like a dd_dist_client_t.
DD_EXPORT bool
    subscription_is (void *self);

//  *** Draft method, for development use, may change without warning ***
//  Get the list of topics
DD_EXPORT zlist_t *
    subscription_get_topics (subscription_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Add a subscribed topic
DD_EXPORT bool
    subscription_add_topic (subscription_t *self, const char *topic);

//  *** Draft method, for development use, may change without warning ***
//  Remove a topic
DD_EXPORT bool
    subscription_del_topic (subscription_t *self, const char *topic);

//  *** Draft method, for development use, may change without warning ***
//  Convert the object to JSON and return
//  Caller owns return value and must destroy it when done.
DD_EXPORT json_object_t *
    subscription_json (subscription_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Print the object to stdout
DD_EXPORT void
    subscription_print (subscription_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Self test of this class.
DD_EXPORT void
    subscription_test (bool verbose);

#endif // DD_BUILD_DRAFT_API
//  @end

#ifdef __cplusplus
}
#endif

#endif
