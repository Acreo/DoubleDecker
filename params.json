{"name":"Doubledecker","tagline":"DoubleDecker messaging system","body":"# DoubleDecker messaging system\r\nDoubleDecker is an hierarchical distributed message system based on ZeroMQ \r\nwhich can be used to provide messaging between processes running on a \r\nsingle machine and between processes running on multiple machines. \r\nIt is hierarchical in the sense that message brokers are connected to \r\neach-other in a tree topology and route messages upwards in case they don't \r\nhave the destination client beneath themselves.\r\n\r\nDoubleDecker currently supports two types of messaging, Notifications, i.e. point-to-point messages from one client to another, and Pub/Sub on a topic. The Pub/Sub mechanism furthermore allows scoping when subscribing to a topic. This means that a client can restrict the subscription to messages published only within a certain scope, such as to clients connected to the same broker, a specific broker, or different groups of brokers.\r\n\r\nDoubleDecker currently supports multiple tenants by authenticating clients using public/private keys, encrypting messages, and enforcing that messages cannot cross from one tenant to another. Additionally there is a special tenant called 'public' that can cross tenant boundaries. This can be used in order to connect clients that are intended to provide a public service, such as a registration service for all tenants, a name-lookup service, or similar. \r\n\r\nThis initial release contains only the Python version of the DoubleDecker broker and client library (and a demo client). A version in C is planned to be released shortly. \r\n\r\nThis work is carried out within the [UNIFY FP7 EU project](http://www.fp7-unify.eu/). For more information about the purpose and how we use DoubleDecker, see:\r\n* [UNIFY Deliverable 4.2, Section 5.1](http://fp7-unify.eu/files/fp7-unify-eu-docs/UNIFY-WP4-D4.2%20Proposal%20for%20SP-DevOps%20network%20capabilities%20and%20tools.pdf)\r\n* Paper and presentation at the EWSDN'15 conference, see:\r\n  * [Scalable Software-Defined Monitoring for Service Provider DevOps](http://www.ewsdn.eu/files/Documents/EWSDN2015/04_03.pdf)\r\n* Demonstratoions validating the functionality\r\n  1. Demo at IFIP/IEEE IM'15\r\n  2. Paper and Demo at EWSDN'15:\r\n     \"Monitoring Transport and Cloud for Network Functions Virtualization\"\r\n\r\n\r\n\r\n### INSTALLATION\r\nDoubleDecker requires Python > 3.3. To install on Ubuntu 15.10, run the install.sh script which performs these actions: \r\n```bash\r\n#install dependencies \r\napt-get update\r\napt-get install python3-setuptools python3-nacl python3-zmq python3-urwid python3-tornado git\r\n# clone the code\r\ngit clone https://github.com/Acreo/DoubleDecker.git\r\n# install the doubledecker module and scripts\r\ncd DoubleDecker/python\r\nsudo python3 setup.py install\r\n# generate public/private keys\r\ncd /etc\r\nmkdir doubledecker\r\ncd doubledecker\r\n# create keys for 4 tenants, public, tenant a, b, and c\r\nddkeys.py (input \"a,b,c\")\r\n```\r\n\r\n### USAGE\r\n```bash\r\n# start a broker listening for TCP connections on *:5555, using the keys\r\n# from broker-keys.json, called 'broker0'\r\nddbroker.py -r tcp://*:5555 -k /etc/doubledecker/broker-keys.json broker0\r\n# start a client from tentant A, called cli1, connect to broker0\r\nddclient.py -d tcp://127.0.0.1:5555 -k /etc/doubledecker/a-keys.json cli1 a\r\n# start a second client tentant A, called cli2, connect to broker0\r\nddclient.py -d tcp://127.0.0.1:5555 -k /etc/doubledecker/a-keys.json cli2 a\r\n# now you can use the CLI interface to send notifications\r\n# from cli1 to cli2 or to subscribe and publish messages\r\n# to send a notification from cli1 to cli2\r\nSend Notification -> Destination: cli2 -> Message: hello -> Notify\r\nshould result in message \"hello\" appearing at cli2\r\n# to subscribe to topic \"alarms\"\r\nSubscribe to topic -> Topic: alarms -> Scope: region -> Subscribe\r\n# to publish on topic alarms\r\nPublish message -> Topic: alarms -> Message: warning -> Publish\r\n```\r\n\r\n### LICENSE\r\n\r\nDoubleDecker is licensed under LGPLv2, for more details see COPYING.LESSER.\r\n\r\nThe file 'python/doubledecker/trie.py' is from the [Google PyTrie module](https://github.com/google/pytrie), licensed under version 2.0 of the Apache License.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}