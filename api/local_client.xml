<class name="local_client">
  DoubleDecker local client class
  <constructor>
    Create a new local client
    <argument name="name" type="string"/>
    <argument name="tenant" type="string"/>
    <argument name="sockid" type="zframe"/>
    <argument name="cookie" type="zframe"/>
  </constructor>
  <destructor>
    Destroy a local client
  </destructor>

  <method name = "is" singleton = "1">
    Probe the supplied object, and report if it looks like a dd_local_client_t.
    <argument name = "self" type = "anything" />
    <return type = "boolean" />
  </method>

  <method name="get_name">
    Get the short name of this client
    <return type="string"/>
  </method>
  <method name="get_prefix_name">
    Get the full name of this client
    <return type="string"/>
  </method>
  <method name="get_tenant_name">
    Get the tenant name of this client
    <return type="string"/>
  </method>
  <method name="get_cookie">
    Get the cookie of this client
    <return type="number" size="8" />
  </method>
  <method name="get_cookie_zframe">
    Get the cookie of this client
    <return type="zframe" />
  </method>

  <method name="get_sockid">
    Get the socket id of this client
    <return type="zframe" />
  </method>
  <method name="string_hash">
    Get the hash value of this distant client
    <return type="number" size="4"/>
  </method>
  <method name="sockid_hash">
    Get the hash value of this distant client
    <return type="number" size="4"/>
  </method>
  <method name="set_name">
    Set the short name of this client
    <argument name="name" type="string"/>
    <return type="nothing"/>
  </method>
  <method name="set_prefix_name">
    Set the full name of this client
    <argument name="prefix_name" type="string"/>
    <return type="nothing"/>
  </method>
  <method name="set_tenant_name">
    Set the tenant name of this client
    <argument name="tenant_name" type="string"/>
    <return type="nothing"/>
  </method>
  <method name="set_cookie">
    Set the cookie of this client
    <argument name="cookie" type="number" size="8" />
      <return type="nothing"/>
  </method>
  <method name="set_cookie_zframe">
    Set the cookie of this client
    <argument name="cookie" type="zframe" />
    <return type="nothing"/>
  </method>
  <method name="set_sockid">
    Set the socket id of this client
    <argument name="sockid" type="zframe" />
    <return type="nothing"/>
  </method>
  <method name="reset_timeout">
    Reset the timeout value for local client
    <return type="nothing"/>
  </method>    
  <method name="increment_timeout">
    Increment the timeout value for local client
    <return type="integer"/>
  </method>    
  <method name="timed_out">
    Check if the local client has timed out
    <return type="boolean"/>
  </method>
  <method name="json">
    Returns the JSON represenation of the object
    <return type="json_object" fresh="1"/>
  </method>
</class>




